When would you want to use a remote repository rather than keeping all your work local?

    When you are collaborating with other people;
    When you want a backup for your code;
    When you want to make a project publicly viewable

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Maybe you are working on something that is in progress and someone else has
    removed a dependency. Things might change on the remote that break your
    code.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    We make branches when we want different versions of the same code (e.g. on a local machine).
    A clone makes a totally separate copy of a repository. So we should clone a repository when we need a copy somewhere else.
    For instance, we want a copy of a repository from the remote to edit locally. Or we want a local repository in a different folder.
    We fork when we need a copy of a repository from GitHub to GitHub.
    It lets us credit the creator and make our own changes independent of the original code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It lets us work offline and grab changes from the remote without immediately
    including them in our work.
    It also lets us track what the last known state was offline so we can
    compare and prepare our commits for pushing to the remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would have multiple versions of the file on an external site or being
    emailed back and forth. It would be harder to keep all the files
    updated and working without version control when there are many versions.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    It's useful to keep work separate. If many people are working on closely
    related items, it seems safest to work in a separate branch.
    However, if you work in master it allows your changes to be instantly
    visible. If you only have a few collaborators it might make sense
    to work in master.
